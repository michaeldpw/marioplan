{"version":3,"sources":["components/layout/SignedInLink.js","store/actions/authActions.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLink","state","firebase","uid","layout_SignedInLink","layout_SignedOutLink","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","withRouter","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","this","projects_ProjectList","Notification","react_router","React","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","onSubmit","htmlFor","onChange","authError","credentials","_ref","signInWithEmailAndPassword","catch","error","SignUp","firstname","lastname","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","err","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initialState","authReducer","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06ebced8.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\n\nconst SignedInLink = (props) => {\n\n\n    return (\n        \n           <ul className=\"right\">\n               <li>\n                    <NavLink to = '/create'>New Project</NavLink>\n               </li>\n               <li>\n                    <a onClick={props.signOut}>Log Out</a>\n               </li>\n               <li>\n                    <NavLink to = '/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink>\n               </li>\n           </ul>\n       \n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n     return {\n          signOut: () => {\n               dispatch(signOut())\n          }\n     }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLink);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email, \n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((error) => {\n            dispatch({ type: 'LOGIN_ERROR', error });\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type:'SIGNOUT_SUCCESS' })\n        })\n\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstname,\n                lastName: newUser.lastname,\n                initials: newUser.firstname[0] + newUser.lastname[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLink = () => {\n    return (\n        \n           <ul className=\"right\">\n               <li>\n                    <NavLink to = '/signup'>Sign Up</NavLink>\n               </li>\n               <li>\n                    <NavLink to = '/signin'>Log In</NavLink>\n               </li>\n               \n           </ul>\n       \n    )\n}\n\n\nexport default SignedOutLink;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLink from './SignedInLink';\nimport SignedOutLink from './SignedOutLink';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className='brand-name'>MarioPlan</Link>\n                {\n                    props.auth.uid? <SignedInLink profile={props.profile}/> : <SignedOutLink />\n                }\n            </div>\n        </nav>\n    )\n}\nconst mapStateToProps = (state) => {\n    \n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    return (\n        <div className=\"section\">\n           <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {\n                            props.notifications && props.notifications.map(item => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"pink-text\">{item.user} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{item.content}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"grey-text note-date\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(item.time.toDate()).fromNow()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n                        }\n                    </ul>\n                </div>\n           </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectSummary = (props) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <NavLink to={'/project/'+props.project.id}>\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{props.project.title}</span>\n                    <p>Posted by {props.project.authorFirstName} {props.project.authorLastName}</p>\n                    <p className=\"grey-text\">{ moment(props.project.createdAt.toDate().toString()).calendar()}</p>\n                </div>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default withRouter(ProjectSummary);","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = (props) => {\n    return (\n        <div className='project-list section'>\n            {\n                props.projects && props.projects.map(project => {\n                    return (\n                            <Link to={'/project/'+ project.id} key={ project.id }>\n                                <ProjectSummary project={project} />\n                            </Link>\n                    )\n                })\n            }\n            \n        </div>\n    )\n}\n\nexport default ProjectList;","import React from 'react'\nimport Notifications from './Notification'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from  'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends React.Component {\n\n    \n    render(){\n\n        if(!this.props.auth.uid) {\n            return <Redirect to='/signin'/>\n        } \n        \n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={this.props.projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={this.props.notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n        \n    }\n}\n  \n\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\n\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', limit: 4, orderBy: ['createdAt', 'desc']}, \n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetail = (props) => {\n\n  if(!props.auth.uid) {\n    return <Redirect to='/signin'/>\n  }\n  if (props.project) {\n\t\treturn (\n\t\t\t<div className='container section project-details'>\n\t\t\t\t\t<div className=\"card z-depth-0\">\n\t\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t\t\t<span className=\"card-title\">{props.project.title}</span>\n\t\t\t\t\t\t\t\t\t<p>{props.project.content}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-action grey grey-text lighten-4\">\n\t\t\t\t\t\t\t\t\t<div>Posted by {props.project.authorFirstName} {props.project.authorLastName}</div>\n\t\t\t\t\t\t\t\t\t<div>{ moment(props.project.createdAt.toDate().toString()).calendar()}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>         \n\t\t\t</div>\n\t\t)\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>  \n    )\n  }\n  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ]) \n)(ProjectDetail)\n","import React, { Component } from 'react'\nimport { signIn } from '../../store/actions/authActions'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nexport class SignIn extends Component {\n\n    state ={\n        email:'',\n        password:''\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n\n    }\n\n  render() {\n    if(this.props.auth.uid) {\n        return <Redirect to='/' />\n    }\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"pink btn lighten-1 z-depth-0\">Sign In</button>\n                <div className=\"red-text center\">\n                    {\n                        this.props.authError? <p>{this.props.authError}</p>: null\n                    }\n                </div>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (credentials) => { dispatch(signIn(credentials)) }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nexport class SignUp extends Component {\n\n    state ={\n        email:'',\n        password:'',\n        firstname:'',\n        lastname:''\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(this.state);\n        this.props.signUp(this.state)\n    }\n\n  render() {\n    if(this.props.auth.uid) {\n        return <Redirect to='/' />\n    }\n    \n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"firstname\">First Name</label>\n                <input type=\"text\" id=\"firstname\" value={this.state.firstname} onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"lastname\">Last Name</label>\n                <input type=\"text\" id=\"lastname\" value={this.state.lastname} onChange={this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <button className=\"pink btn lighten-1 z-depth-0\">Sign Up</button>\n                <div className=\"red-text center\">\n                    {  this.props.authError ? <p>{this.props.authError}</p>: null}\n                </div>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => {\n            dispatch(signUp(newUser))\n        }\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nexport class CreateProject extends Component {\n\n    state ={\n        title:'',\n        content:''\n        \n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n       this.props.createProject(this.state);\n       this.props.history.push('/');\n    }\n\n  render() {\n\n    if(!this.props.auth.uid) {\n        return <Redirect to='/signin'/>\n    }\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" value={this.state.title} onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"content\">Content</label>\n                <textarea \n                    type=\"text\" \n                    className=\"materialize-textarea\"\n                    id=\"content\" \n                    value={this.state.password} \n                    onChange={this.handleChange}/>\n            </div>\n           \n            <div className=\"input-field\">\n                <button className=\"pink btn lighten-1 z-depth-0\" onClick={this.handleSubmit}>Create</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToprops = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToprops = (dispatch) => {\n    return {\n        createProject: (project) => {dispatch(createProject(project))}\n    }\n}\n\nexport default connect(mapStateToprops, mapDispatchToprops)(CreateProject)\n ","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId  = getState().firebase.auth.uid; \n        //return a Promise\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n             dispatch({ type: 'CREATE_PROJECT', project: project})\n        }).catch((error) => {\n            dispatch({ type:'CREATE_PROJECT_ERROR', error: error})\n        })\n       \n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'; \nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetail from './components/projects/ProjectDetail'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n        \n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetail}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initialState = {\n    authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n        case 'LOGIN_ERROR ':\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default: \n            return state;\n    }\n   \n}\n\nexport default authReducer","\nconst initialState = {\n    projects:[\n        {id:'1', title:'aa', content:'ssss'},\n        {id:'2', title:'aa', content:'ssss'},\n        {id:'3', title:'aa', content:'ssss'}\n    ]\n\n}\n\nconst projectReducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n           console.log(action.project);\n           return state;\n        case 'CREATE_PROJECT_ERROR':\n           console.log(action.error);\n           return state;\n        default: \n           return state;\n    }\n   \n    \n}\n\nexport default projectReducer","import { combineReducers } from 'redux'\nimport authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyDYIeII_oN2hr00XMJIoxEGb1ZSTXtOD5I\",\n    authDomain: \"marioplan-70ac0.firebaseapp.com\",\n    databaseURL: \"https://marioplan-70ac0.firebaseio.com\",\n    projectId: \"marioplan-70ac0\",\n    storageBucket: \"marioplan-70ac0.appspot.com\",\n    messagingSenderId: \"368273643694\"\n  };\n\n  firebase.initializeApp(config);\n  //firebase.firestore().settings({ timestampsInSnapshots: true});\n\n  export default firebase;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\n \n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )   \n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n\n})\n"],"sourceRoot":""}